 {
  "title": "Data Engineering on Microsoft Azure DP - 203",
  "subtitle": "A master course designed for working professionals like you. Make your career soar with Loyal Bytes.",
  "heroImage": "/images/course-page/azure-hero-image.png",
  "heroBg": "/images/course-page/azure-hero-bg.png",
  "courseDetail": {
    "duration": "40 Hours",
    "certification": "DP â€“ 203 and Data Engineering on Microsoft Azure",
    "batchInfo": "Weekends and weekdays batches available",
    "level": "200",
    "highlights": [
      {
        "icon": "user",
        "color": "orange",
        "heading": "Duration",
        "subheading": "40 Hours."
      },
      {
        "icon": "user ",
        "color": "orange",
        "heading": "Batch Days",
        "subheading": "Weekdays"
      },
      {
        "icon": "user ",
        "color": "orange",
        "heading": "Learningmode",
        "subheading": "Group, One-to-One, Corporate Batches, Online Live Classrooms"
      },
      {
        "icon": "user",
        "color": "orange",
        "heading": "Passing score",
        "subheading": "700"
      }
    ],
    "bg": "blue",
    "displayImage": "/images/course-page/azure-hightlights-image.png",
    "description": "A candidate for the Azure Data Engineer Associate certification should have subject matter expertise integrating, transforming, and consolidating data from various structured and unstructured data systems into structures that are suitable for building analytics solutions. Responsibilities for this role include helping stakeholders understand the data through exploration, building and maintaining secure and compliant data processing pipelines by using different tools and techniques. This professional uses various Azure data services and languages to store and produce cleansed and enhanced datasets for analysis. An Azure data engineer also helps ensure that data pipelines and data stores are high-performing, efficient, organized, and reliable, given a specific set of business requirements and constraints. This professional deals with unanticipated issues swiftly and minimizes data loss. An Azure data engineer also designs, implements, monitors, and optimizes data platforms to meet the data pipeline needs. A candidate for this certification must have solid knowledge of data processing languages, such as SQL, Python, or Scala, and they need to understand parallel processing and data architecture patterns."
  },
  "idealFor": "Candidates for this exam should have subject matter expertise integrating, transforming, and consolidating data from various structured and unstructured data systems into a structure that is suitable for building analytics solutions. Azure data engineers help stakeholders understand the data through exploration, and they build and maintain secure and compliant data processing pipelines by using different tools and techniques. These professionals use various Azure data services and languages to store and produce cleansed and enhanced datasets for analysis. Azure data engineers also help ensure that data pipelines and data stores are high-performing, efficient, organized, and reliable, given a set of business requirements and constraints. They deal with unanticipated issues swiftly, and they minimize data loss. They also design, implement, monitor, and optimize data platforms to meet the data pipelines needs. A candidate for this exam must have strong knowledge of data processing languages such as SQL, Python, or Scala, and they need to understand parallel processing and data architecture patterns.",
  "learningObjectives": "Create beautiful web flow. Learn how to migrate and host on Microsoft Azure",
  "modules": [
    {
      "title": "Module 1: Design and Implement Data Storage (40-45%)",
      "submodules": [
        {
          "heading": "Design a data storage structure",
          "contents": [
            "Design an Azure Data Lake solution",
            "Recommend file types for storage",
            "Recommend file types for analytical queries",
            "Design for efficient querying",
            "Design for data pruning",
            "Design a folder structure that represents the levels of data transformation",
            "Design a distribution strategy",
            "Design a data archiving solution"
          ]
        },
        {
          "heading": "Design a partition strategy",
          "contents": [
            "Design a partition strategy for files",
            "Design a partition strategy for analytical workloads",
            "Design a partition strategy for efficiency/performance",
            "Design a partition strategy for Azure Synapse Analytics",
            "Identify when partitioning is needed in Azure Data Lake Storage Gen2"
          ]
        },
        {
          "heading": "Design the serving layer",
          "contents": [
            "Design star schemas",
            "Design slowly changing dimensions",
            "Design a dimensional hierarchy",
            "Design a solution for temporal data",
            "Design for incremental loading",
            "Design analytical stores",
            "Design metastores in Azure Synapse Analytics and Azure Databricks"
          ]
        },
        {
          "heading": "Implement physical data storage structures",
          "contents": [
            "Implement compression",
            "Implement partitioning",
            "Implement sharding",
            "Implement different table geometries with Azure Synapse Analytics pools",
            "Implement data redundancy",
            "Implement distributions",
            "Implement data archiving"
          ]
        },
        {
          "heading": "Implement logical data structures",
          "contents": [
            "Build a temporal data solution",
            "Build a slowly changing dimension",
            "Build a logical folder structure",
            "Build external tables",
            "Implement file and folder structures for efficient querying and data pruning"
          ]
        },
        {
          "heading": "Implement the serving layer",
          "contents": [
            "Deliver data in a relational star schema",
            "Deliver data in Parquet files",
            "Maintain metadata",
            "Implement a dimensional hierarchy"
          ]
        }
      ]
    },
    {
      "title": "Module 2: Design and Develop Data Processing (25-30%)",
      "submodules": [
        {
          "heading": "Ingest and transform data",
          "contents": [
            "Transform data by using Apache Spark",
            "Recommend a public and internal IP strategy",
            "Transform data by using Data Factory",
            "Transform data by using Azure Synapse Pipelines",
            "Transform data by using Stream Analytics",
            "Cleanse data",
            "Split data",
            "Shred JSON",
            "Encode and decode data",
            "Configure error handling for the transformation",
            "Normalize and denormalize values",
            "Transform data by using Scala",
            "Perform data exploratory analysis"
          ]
        },
        {
          "heading": "Design and develop a batch processing solution",
          "contents": [
            "Develop batch processing solutions by using Data Factory, Data Lake, Spark, Azure Synapse Pipelines, PolyBase, and Azure Databricks",
            "Create data pipelines",
            "Design and implement incremental data loads",
            "Design and develop slowly changing dimensions",
            "Handle security and compliance requirements",
            "Scale resources",
            "Configure the batch size",
            "Design and create tests for data pipelines",
            "Integrate Jupyter/IPython notebooks into a data pipeline",
            "Handle duplicate data",
            "Handle missing data",
            "Handle late-arriving data",
            "Upsert data",
            "Regress to a previous state",
            "Design and configure exception handling",
            "Configure batch retention",
            "Design a batch processing solution",
            "Debug Spark jobs by using the Spark UI"
          ]
        },
        {
          "heading": "Design and develop a stream processing solution",
          "contents": [
            "Develop a stream processing solution by using Stream Analytics, Azure Databricks, and Azure Event Hubs",
            "Process data by using Spark structured streaming",
            "Monitor for performance and functional regressions",
            "Design and create windowed aggregates",
            "Handle schema drift",
            "Process time series data",
            "Process across partitions",
            "Process within one partition",
            "Configure checkpoints/watermarking during processing",
            "Scale resources",
            "Design and create tests for data pipelines",
            "Optimize pipelines for analytical or transactional purposes",
            "Handle interruptions",
            "Design and configure exception handling",
            "Upsert data",
            "Replay archived stream data",
            "Design a stream processing solution"
          ]
        },
        {
          "heading": "Manage batches and pipelines",
          "contents": [
            "Trigger batches",
            "Handle failed batch loads",
            "Validate batch loads",
            "Manage data pipelines in Data Factory/Synapse Pipelines",
            "Schedule data pipelines in Data Factory/Synapse Pipelines",
            "Implement version control for pipeline artifacts",
            "Manage Spark jobs in a pipeline"
          ]
        }
      ]
    },
    {
      "title": "Module 3: Design and Implement Data Security (10-15%)",
      "submodules": [
        {
          "heading": "Design security for data policies and standards",
          "contents": [
            "Design data encryption for data at rest and in transit",
            "Design a data auditing strategy",
            "Design a data masking strategy",
            "Design for data privacy",
            "Design a data retention policy",
            "Design to purge data based on business requirements",
            "Design Azure role-based access control (Azure RBAC) and POSIX-like Access Control List (ACL) for Data Lake Storage Gen2",
            "Design row-level and column-level security"
          ]
        },
        {
          "heading": "Implement data security",
          "contents": [
            "Implement data masking",
            "Encrypt data at rest and in motion",
            "Implement row-level and column-level security",
            "Implement Azure RBAC",
            "Implement POSIX-like ACLs for Data Lake Storage Gen2",
            "Implement a data retention policy",
            "Implement a data auditing strategy",
            "Manage identities, keys, and secrets across different data platform technologies",
            "Implement secure endpoints (private and public)",
            "Implement resource tokens in Azure Databricks",
            "Load a Data Frame with sensitive information",
            "Write encrypted data to tables or Parquet files",
            "Manage sensitive information"
          ]
        }
      ]
    },
    {
      "title": "Module 4: Monitor and Optimize Data Storage and Data Processing (10-15%)",
      "submodules": [
        {
          "heading": "Monitor data storage and data processing",
          "contents": [
            "Implement logging used by Azure Monitor",
            "Configure monitoring services",
            "Measure performance of data movement",
            "Monitor and update statistics about data across a system",
            "Monitor data pipeline performance",
            "Measure query performance",
            "Monitor cluster performance",
            "Understand custom logging options",
            "Schedule and monitor pipeline tests",
            "Interpret Azure Monitor metrics and logs",
            "Interpret a Spark directed acyclic graph (DAG)"
          ]
        },
        {
          "heading": "Optimize and troubleshoot data storage and data processing",
          "contents": [
            "Compact small files",
            "Rewrite user-defined functions (UDFs)",
            "Handle skew in data",
            "Handle data spill",
            "Tune shuffle partitions",
            "Find shuffling in a pipeline",
            "Optimize resource management",
            "Tune queries by using indexers",
            "Tune queries by using cache",
            "Optimize pipelines for analytical or transactional purposes",
            "Optimize pipeline for descriptive versus analytical workloads",
            "Troubleshoot a failed spark job",
            "Troubleshoot a failed pipeline run"
          ]
        }
      ]
    }
  ],
  "onCompletion": [
    "The bullets that follow each of the skills measured are intended to illustrate how we are assessing that skill. Related topics may not be covered in the exam.",
    "Most questions cover features that are general availability (GA). The exam may contain questions on Preview features if those features are commonly used."
  ],
  "batches": [
    {
      "id": "",
      "days": "",
      "mode": "",
      "time": "",
      "duration": ""
    },
    {
      "id": "",
      "days": "",
      "mode": "",
      "time": "",
      "duration": ""
    },
    {
      "id": "",
      "days": "",
      "mode": "",
      "time": "",
      "duration": ""
    },
    {
      "id": "",
      "days": "",
      "mode": "",
      "time": "",
      "duration": ""
    },
    {
      "id": "",
      "days": "",
      "mode": "",
      "time": "",
      "duration": ""
    }
  ]
}